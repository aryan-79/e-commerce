generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  SELLER
  ADMIN
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  password  String
  number    String
  role      Role      @default(USER)
  products  Product[]
  orders    Order[]
  cart      Cart[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Session   Session[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Product {
  id            Int      @id @default(autoincrement())
  seller        User     @relation(fields: [sellerId], references: [id])
  sellerId      String
  name          String
  description   String
  price         Float
  discount      Int?
  category      String
  stock         Int
  productImages String[]
  Order         Order[]
  Cart          Cart[]
}

model ProductImage {
  id  Int    @id @default(autoincrement())
  url String @unique
}

model Order {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
